<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xsi:schemaLocation="
  http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/mvc
  http://www.springframework.org/schema/mvc/spring-mvc.xsd
  http://www.springframework.org/schema/tx
  http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- Add support for component scanning -->
    <context:component-scan base-package="com.pos.astra" />
    <!-- Add support for conversion, formatting and validation support -->
    <mvc:annotation-driven/>
    <!-- Define Spring MVC view resolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <!-- Step 1: Define Database DataSource / connection pool -->
    <!-- Step 1: Define Database DataSource / connection pool -->
    <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/pos_apps_astra?serverTimezone=UTC" />
        <property name="username" value="root" />
        <property name="password" value="" />

    </bean>
    <!-- Step 2: Setup Hibernate session factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource" />
        <property name="packagesToScan" value="com.pos.astra.model" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>com.pos.astra.model.MstCategory</value>
                <value>com.pos.astra.model.MstEmployee</value>
                <value>com.pos.astra.model.MstProvince</value>
                <value>com.pos.astra.model.MstRole</value>

                <value>com.pos.astra.model.MstRegion</value>
                <value>com.pos.astra.model.MstDistrict</value>
                <value>com.pos.astra.model.MstOutlet</value>
                <value>com.pos.astra.model.MstSupplier</value>
                <value>com.pos.astra.model.MstItem</value>
                <value>com.pos.astra.model.MstVariant</value>
                <value>com.pos.astra.model.AssInventory</value>
                <value>com.pos.astra.model.AssEmployeeOutlet</value>
                <value>com.pos.astra.model.MstUser</value>
                <value>com.pos.astra.model.MstCustomer</value>
            </list>
        </property>
    </bean>
    <!-- Step 3: Setup Hibernate transaction manager -->
    <bean id="myTransactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- Step 4: Enable configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="myTransactionManager" />
    <!-- Add support for reading web resources: css, images, js, etc ... -->
    <mvc:resources mapping="/resources/**" location="/resources/" >

    </mvc:resources>
</beans>